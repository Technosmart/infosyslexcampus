#PF-Assgn-20

def calculate_loan(account_number,salary,account_balance,loan_type,loan_amount_expected,customer_emi_expected):
    eligible_loan_amount=0
    bank_emi_expected=0
    eligible_loan_amount=0
    account_number=str(account_number)
    if (account_number[0]=='1' and len(account_number)==4 and account_balance >= 100000):
        if salary > 25000:
            loan_type='Car'
            eligible_loan_amount=500000
            bank_emi_expected=36
        elif salary > 50000:
            loan_type='House'
            eligible_loan_amount=6000000
            bank_emi_expected=60
        elif salary > 75000:
            loan_type='Business'
            eligible_loan_amount=7500000
            bank_emi_expected	=84
        else:
            print("Invalid loan type or salary")
    else:
        if account_number[0]!='1' or len(account_number)!=4:
            print("Invalid account number")
        elif account_balance < 100000:
            print("Insufficient account balance")
    
    if (eligible_loan_amount>=loan_amount_expected and bank_emi_expected >= customer_emi_expected):
        print("Account number:", account_number)
        print("The customer can avail the eligible_loan_amount of Rs.", eligible_loan_amount)
        print("Eligible bank_emi_expected :", bank_emi_expected)
        print("Requested loan eligible_loan_amount:", loan_amount_expected)
        print("Requested EMI's:",customer_emi_expected)
    else:
        print("The customer is not eligible for the loan")
    
    #Start writing your code here
    #Populate the variables: eligible_loan_amount and bank_emi_expected

    #Use the below given print statements to display the output, in case of success
    
    #Use the below given print statements to display the output, in case of invalid data.
    # Also, do not modify the above print statements for verification to work
#Test your code for different values and observe the results
calculate_loan(1001,40000,250000,"Car",300000,30)


